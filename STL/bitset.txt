bitset<N> bs;
bs.set()全部置1，bs.reset()全部置0;
bs.set(pos)等价于bs[pos]=1
bs.reset(pos)等价于bs[pos]=0
b.to_string()      //返回 b 的 string 表示法
b.to_ulong     //返回 b 的 long 型表示法
flip               翻转该bit的值
size              返回集合大小
test              测试某一位是否是1

bitset<N>a, b;
bitset<length> b(string s) //以字符串 s 初始化长度为 length 的 b, s 必须仅包含01
bitset<length> b(unsigned long u)  //b有length位,并用u赋值;如果u超过n位,则顶端被截除
!a //按位取反  
a^b //按位异或  
a|b //按位或  
a&b //按位与  
a=b<<3 //整体移位  
a.count(); //a中1的个数  
复杂度大约为常数级